# Do not modify this file!  It was generated by 'nixos-generate-config'
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ ];

  boot.initrd.availableKernelModules = [ ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/xvda2";
      fsType = "btrfs";
      options = [ "subvol=@root" ];
    };

  fileSystems."/nix" =
    { device = "/dev/xvda2";
      fsType = "btrfs";
      options = [ "subvol=@nix" ];
    };

  fileSystems."/snapshots" =
    { device = "/dev/xvda2";
      fsType = "btrfs";
      options = [ "subvol=@snapshots" ];
    };

  fileSystems."/home" =
    { device = "/dev/xvda2";
      fsType = "btrfs";
      options = [ "subvol=@home" ];
    };

  fileSystems."/persist" =
    { device = "/dev/xvda2";
      fsType = "btrfs";
      options = [ "subvol=@persist" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/c5ce939b-b3fb-4212-9820-f3da2d03a9d7";
      fsType = "ext4";
    };

  fileSystems."/var/lib/docker/btrfs" =
    { device = "/persist/@root/var/lib/docker/btrfs";
      fsType = "none";
      options = [ "bind" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  # networking.interfaces.br-e5cb0a3c8d78.useDHCP = lib.mkDefault true;
  # networking.interfaces.docker0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enX0.useDHCP = lib.mkDefault true;
  # networking.interfaces.tailscale0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}